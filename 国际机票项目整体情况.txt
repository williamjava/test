>>>架构层面的考虑
1.sso的sit和正式环境，需要替换jdk的安全证书；
2.高可用部署；
3.服务的熔断和降级；

>>>国际机票待办事项
1.什么样的员工是领导?
2.管理员登录之后，获取对应的权限列表！(未开始，登录成功之后获取)
3.菜单导航动态获取；(未开始)
4.中英文切换；(未开始)
5.邮件发送；(未开始接入)
6.文件上传；(已对接，待联调)
7.国家城市信息调用cloudapi初始化，每天同步一次；(定时任务实现)

8.使用json接收前端数据的地方，全部替换为对象接收；
9.再次退票；(未开始)
10.改期流程；(进行中)
11.报表相关；(进行中)
12.差旅管控；(进行中)
13.催单；

>>>开发注意事项
1.本地开发的接口，给到前端使用之前，开发必须进行充分的自测，提高联调的效率(重点)；
2.核心流程，增加必要的注释说明，并且打印相关的日志，便于问题的排查；
3.保证代码的整洁(移除已注释并不用的代码；删除多余的空行，仅保留方法与方法之间、代码块与代码块之间、包导入与类定义之间、不同属性之间的)；
4.尽可能避免空异常(任何使用对象的地方，增加空异常判断，即获取对象之后，先判断再操作)；
5.注意变量的命名，要通俗易懂，不要用没有任何意义的命名；
6.方法体不宜过长，多提取方法，增加代码的简洁性和可读性；
7.关于SwaggerUI的使用(只需要针对返回给前端的xxxVO以及接收前端参数的xxxForm或xxxQuery对象，使用ApiModel和ApiModelProperty进行说明，其他的对象不需要)；
8.方法尽早返回，比如说：获取一个对象之后，如果不为空，我们需要进行一些逻辑操作，那么对于这种情况，我们就需要先判断是否为空，为空，方法立即返回，不为空，继续往下执行相应的逻辑处理；
